---
# Designed to run on Debian 12
- hosts: all
  # must enable root SSH: vi /etc/ssh/sshd_config PermitRootLogin and restart sshd
  become: false
  # remote_user: root # see inventory
  gather_facts: false
  
  tasks:

    # ------------------------------------------------------
    - name: INITIAL SETUP BLOCK
      block:

        # TODO set central timezone and sync time
        - name: Set TZ
          community.general.timezone:
            name: America/Chicago

        - name: Set time syncing
          ansible.builtin.command:
            cmd: timedatectl set-ntp true

        - name: Set hostname
          ansible.builtin.hostname:
            name: h-equals-h
        
        - name: Set static ip FQDN hostname in hosts
          ansible.builtin.lineinfile:
            path: /etc/hosts
            # TODO retrieve static IP
            line: "127.0.1.1 h-equals-h.com h-equals-h"

        - name: Update software
          ansible.builtin.apt:
            update_cache: true
            upgrade: full

        - name: Configure root pw
          ansible.builtin.user:
            name: root
            # TODO change later
            # generated with mkpasswd --method=sha-512 `apt install whois`
            # https://docs.ansible.com/ansible/latest/reference_appendices/faq.html#how-do-i-generate-encrypted-passwords-for-the-user-module
            password: "$6$VdpunU2oUPXYXIQc$NV6jkf6Q9kuE6.Ou3Bqbw97nIVziSws7aUfxiYdUfCdX99FHJzXpVsxQWRToRMkVURXnEWRP39yJsSpX4xQpu1"

        - name: Configure basic user
          ansible.builtin.user:
            name: jfritz
            groups: sudo
            shell: /bin/bash
            # TODO change later
            # generated with mkpasswd --method=sha-512 `apt install whois`
            # https://docs.ansible.com/ansible/latest/reference_appendices/faq.html#how-do-i-generate-encrypted-passwords-for-the-user-module
            password: "$6$VdpunU2oUPXYXIQc$NV6jkf6Q9kuE6.Ou3Bqbw97nIVziSws7aUfxiYdUfCdX99FHJzXpVsxQWRToRMkVURXnEWRP39yJsSpX4xQpu1"

        - name: See if ec2-user and key exists
          stat: path=/home/ec2-user/.ssh
          register: stat_result

        - name: Use ssh key from ec2-user for basic user
          # you downloaded the ec2-user key, right?
          ansible.builtin.copy:
            remote_src: true
            src: /home/ec2-user/.ssh
            dest: /home/jfritz/.ssh
            owner: jfritz
            group: jfritz
          when: stat_result.stat.isdir|d(False)
        
        - name: Remove ec2-user
          ansible.builtin.user:
            name: ec2-user
            state: absent
            remove: true
          when: stat_result.stat.isdir|d(False)

        - name: Install base OS utilities 
          ansible.builtin.apt:
            name: "{{ item }}"
          loop:
            - sudo
            - unzip
            - screen
            - htop
            - git
            - vim
            - openssl
            - iptables # ? 
            - tree
            - curl
            - whois

        - name: Configure sudo
          community.general.sudoers:
            name: sudo-as-root
            state: present
            group: sudo
            runas: root
            commands: ALL

        # - name: Configure sshd
    # ------------------------------------------------------

    # ------------------------------------------------------
    # - name: FIREWALL SETUP BLOCK
    # - name: Install firewall
    # - name: Configure firewall 
    # ------------------------------------------------------

    # ------------------------------------------------------
    # https://wiki.debian.org/PostgreSql
    - name: PG SETUP BLOCK
      block:

        - name: Retrieve and install pgsql
          ansible.builtin.apt:
            update_cache: true
            name: "{{ item }}"
          loop:
            - "postgresql"
            - "postgresql-client"
          
        - name: Set postgres system user pw
          ansible.builtin.user:
            name: postgres
            # TODO change later
            # generated with mkpasswd --method=sha-512 `apt install whois`
            # https://docs.ansible.com/ansible/latest/reference_appendices/faq.html#how-do-i-generate-encrypted-passwords-for-the-user-module
            password: "$6$VdpunU2oUPXYXIQc$NV6jkf6Q9kuE6.Ou3Bqbw97nIVziSws7aUfxiYdUfCdX99FHJzXpVsxQWRToRMkVURXnEWRP39yJsSpX4xQpu1"

        - name: Create postgres user heqh_dbu
          become: true
          become_user: postgres
          ansible.builtin.command:
            # pw hash is "md5" + md5("pw" + "username" as salt)
            cmd: >
              psql -d postgres -c "CREATE ROLE heqh_dbu WITH PASSWORD 'md584a9cd3ec8cfb9d231867841b312c614';"

        - name: Create postgres db heqh_bbs for heqh_dbu
          become: true
          become_user: postgres
          ansible.builtin.command:
            cmd: "createdb -O heqh_dbu heqh_bbs"

        - name: Grant privs on postgres user heqh_dbu against heqh_bbs
          become: true
          become_user: postgres
          ansible.builtin.command:
            # pw hash is md5("pw" + "username" as salt)
            cmd: >
              psql -d postgres -c 'GRANT CONNECT, CREATE ON DATABASE heqh_bbs TO heqh_dbu;'

            # TODO ensure user can only connect locally
            # TODO vaultify password and change it

        - name: Enable and restart postgresql
          ansible.builtin.service:
            name: postgresql
            state: restarted
            enabled: true

    # ------------------------------------------------------

    # ------------------------------------------------------
    - name: PHP SETUP BLOCK
      block: 
        - name: Retrieve and install php
          ansible.builtin.apt:
            update_cache: true
            name: php-fpm # fpm version used with lighttpd

        # - name: Configure php with sane defaults for 2gb system
        # - name: Retrieve and install php modules
        # - name: Configure php modules
    # ------------------------------------------------------

    # ------------------------------------------------------
    - name: HTTPD SETUP BLOCK
      block: 

        - name: Retrieve and install httpd
          ansible.builtin.apt:
            update_cache: true
            name: "{{ item }}"
          loop:
            - lighttpd
            - lighttpd-mod-deflate
            - lighttpd-mod-openssl

        - name: Configure httpd for php, must have php-fpm installed
          ansible.builtin.command:
            cmd: lighty-enable-mod fastcgi-php-fpm 

        - name: Link /www to /var/www/html for convenience
          ansible.builtin.file:
            src: /var/www/html
            dest: /www
            state: link 

        - name: Enable and restart lighttpd
          ansible.builtin.service:
            name: lighttpd
            state: restarted
            enabled: true

        # TODO setup SSL https://wiki.debian.org/Lighttpd#SSL.2FTLS_.28HTTPS.29
    # ------------------------------------------------------

    # ------------------------------------------------------
    - name: PHPBB SETUP BLOCK
      block: 

        # TODO ansibleify
        - name: Clear /www
          ansible.builtin.shell:
            cmd: "rm -rf /www/*"

        - name: Retrieve phpBB
          ansible.builtin.get_url:
            url: https://download.phpbb.com/pub/release/3.3/3.3.14/phpBB-3.3.14.zip
            dest: /www/phpbb.zip
            mode: '0755'
          
        - name: Install phpBB
          ansible.builtin.unarchive:
            remote_src: true
            src: /www/phpbb.zip
            dest: /www/

        - name: Copy phpBB to root to avoid ugly /phpBB3 path
          ansible.builtin.copy:
            remote_src: true
            src: /www/phpBB3/
            dest: /www/

        - name: Purge files in /phpBB3
          ansible.builtin.file:
            path: /www/phpBB3
            state: absent

        - name: Retrieve American English Language Pack for phpBB3
          ansible.builtin.get_url:
            url: https://www.phpbb.com/customise/db/download/208693
            dest: /www/american_english_4_14_0.zip
          
        - name: Unzip language pack
          ansible.builtin.unarchive:
            remote_src: true
            src: /www/american_english_4_14_0.zip
            dest: /www/

        - name: Install language pack
          ansible.builtin.copy:
            remote_src: true
            src: /www/american_english_4_14_0/
            dest: /www/

        - name: Remove language pack src
          ansible.builtin.file:
            path: "{{ item }}"
            state: absent
          loop:
            - /www/american_english_4_14_0/ 
            - /www/american_english_4_14_0.zip
          

          # TODO confirm permissions of everyhthing

    # ------------------------------------------------------

    # ------------------------------------------------------
    # - name: CACHE SETUP BLOCK
    # - name: Create cache service user and directories
    # - name: Retrieve and install cache
    # - name: Configure cache
    # ------------------------------------------------------

    # ------------------------------------------------------
    # - name: COCKPIT SETUP BLOCK
    # - name: Retrieve and install cockpit
    # - name: Configure cockpit
    # ------------------------------------------------------

    # ------------------------------------------------------
    # - name: CLEANUP BLOCK
    - name: Disable root ssh
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        line: "# PermitRootLogin yes"
        regexp: "^.*PermitRootLogin.*"
    # ------------------------------------------------------

    # ------------------------------------------------------
    # - name: SUMMARY BLOCK
    # - name: Echo DB user information
    # - name: Echo path to phpbb URL for install
    # - name: Echo path to cockpit
    # ------------------------------------------------------